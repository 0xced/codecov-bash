#!/bin/bash

VERSION=$(grep VERSION= ./codecov | cut -d \" -f 2)
export _SHA=$(git rev-parse HEAD)
export _BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [ "$_BRANCH" = "HEAD" ];
then
  _BRANCH="master"
fi
export _VERSION="$VERSION"

export PATH=$PWD:$PATH

function reset () {
    rm -rf temp bower .bowerrc
    mkdir -p temp
    mkdir -p ~/Library/Developer/Xcode/DerivedData
    . tests/env
    echo '{"file.txt":[null, 1, 0]}' > temp/coverage.json
    echo '{"another.txt":[null, 1, 0]}' > temp/coverage.xml
    touch temp/file.rb
    echo 'blank' > temp/not-file.json
}

function assertDiff () {
    diff <(erb "$2") <(echo "$1")
    assertTrue 'Expected output differs.' $?
}

function test_help () {
    reset
    assertDiff "$(./codecov -h)" ./tests/help.txt
}

# ------------
# Test Options
# ------------
function test_url_opt () {
    reset
    res=$(./codecov -d -u http://example.com | grep "http://example.com/")
    diff <(echo "http://example.com/upload/v2?package=bash-$VERSION&branch=$_BRANCH&commit=$_SHA") <(echo "$res")
    assertTrue 'Expected output differs.' $?
}

function test_url_env () {
    reset
    export CODECOV_URL="http://other.com"
    res=$(./codecov -d | grep "http://other.com/")
    diff <(echo "http://other.com/upload/v2?package=bash-$VERSION&branch=$_BRANCH&commit=$_SHA") <(echo "$res")
    assertTrue 'Expected output differs.' $?
}

function test_bowerrc_empty () {
    reset
    mkdir bower_components
    touch bower_components/file.md
    res=$(./codecov -d | grep "bower_components/file.md")
    rm -rf bower_components
    assertEquals '' "$res"
}

function test_bowerrc () {
    reset
    echo '{"directory": "bower/"}' > .bowerrc
    mkdir bower
    touch bower/file.md
    res=$(./codecov -d | grep "bower/file.md")
    rm -rf bower
    rm .bowerrc
    assertEquals '' "$res"
}

function test_bowerrc_2 () {
    reset
    echo '{    "directory":

  "bower/" }' > .bowerrc
    mkdir bower
    touch bower/file.md
    res=$(./codecov -d | grep "bower/file.md")
    rm -rf bower
    rm .bowerrc
    assertEquals '' "$res"
}

function test_env_opt () {
    reset
    export BUILD_ID="apples"
    assertDiff "$(./codecov -de BUILD_ID)" ./tests/env.txt

    export COMMIT="abc"
    assertDiff "$(./codecov -de BUILD_ID,COMMIT)" ./tests/env-many.txt
}

function test_env_env () {
    reset
    export CODECOV_ENV="BUILD_ID"
    export BUILD_ID="apples"
    assertDiff "$(./codecov -d)" ./tests/env.txt

    export CODECOV_ENV="BUILD_ID,COMMIT"
    export COMMIT="abc"
    assertDiff "$(./codecov -d)" ./tests/env-many.txt
}

function test_slug_opt () {
    reset
    res=$(./codecov -dr myowner/myrepo | grep "https://codecov.io/")
    diff <(echo "https://codecov.io/upload/v2?package=bash-$VERSION&branch=$_BRANCH&commit=$_SHA&slug=myowner/myrepo") <(echo "$res")
    assertTrue 'Expected output differs.' $?
}

function test_slug_env () {
    reset
    export CODECOV_SLUG="myowner/myrepo"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&branch=$_BRANCH&commit=$_SHA&slug=myowner/myrepo"
}

function test_gcov () {
    reset
    ./codecov -dv -X gcov | grep '**> gcov disable'
    assertTrue 'gcov was disabled' $?
}

function test_silent () {
    reset
    assertDiff "$(./codecov -sd)" ./tests/silent.txt
}

function test_file_opt () {
    reset
    assertDiff "$(./codecov -df temp/coverage.json)" ./tests/file.txt
}

function test_token_opt () {
    reset
    token="38cd42da-4df4-4760-a998-4ebeca536904"
    res=$(./codecov -d -t "$token" | grep "https://codecov.io/")
    diff <(echo "https://codecov.io/upload/v2?package=bash-$VERSION&branch=$_BRANCH&commit=$_SHA&token=$token") <(echo "$res")
    assertTrue 'Expected output differs.' $?
}

function test_token_env () {
    reset
    export CODECOV_TOKEN="38cd42da-4df4-4760-a998-4ebeca536904"
    res=$(./codecov -d | grep "https://codecov.io/")
    diff <(echo "https://codecov.io/upload/v2?package=bash-$VERSION&branch=$_BRANCH&commit=$_SHA&token=$token") <(echo "$res")
    assertTrue 'Expected output differs.' $?
}

function test_verbose_opt () {
    reset
    assertDiff "$(./codecov -vd | grep -v 'coverage cli exists')" ./tests/verbose.txt
}

function test_upload () {
    reset
    export CI="true"
    export TRAVIS_JOB_ID="33116958"
    export TRAVIS="true"
    export TRAVIS_BRANCH="master"
    export TRAVIS_COMMIT="c739768fcac68144a3a6d82305b9c4106934d31a"
    export TRAVIS_REPO_SLUG='codecov/ci-repo'
    export TRAVIS_JOB_ID="33116958"
    export TRAVIS_PULL_REQUEST="false"
    export TRAVIS_JOB_NUMBER="4.1"
    res=$(./codecov | grep "http://codecov.io" | cut -d \" -f 4)
    diff <(echo "http://codecov.io/github/codecov/ci-repo?ref=c739768fcac68144a3a6d82305b9c4106934d31a") <(echo "$res")
    assertTrue 'Expected output differs.' $?
}

# -----------------
# Test CI Companies
# -----------------
function assertURL () {
    url=$(./codecov -d | grep 'https://codecov.io/')
    diff <(echo "$1") <(echo "$url")
    assertTrue 'Expected output differs.' $?
}

function test_travis () {
    reset
    export CI="true"
    export TRAVIS_JOB_ID="33116958"
    export TRAVIS="true"
    export TRAVIS_BRANCH="master"
    export TRAVIS_COMMIT="c739768fcac68144a3a6d82305b9c4106934d31a"
    export TRAVIS_REPO_SLUG='codecov/ci-repo'
    export TRAVIS_JOB_ID="33116958"
    export TRAVIS_PULL_REQUEST="false"
    export TRAVIS_JOB_NUMBER="4.1"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=travis-org&branch=master&commit=c739768fcac68144a3a6d82305b9c4106934d31a&build=4.1&pull_request=false&job=33116958&slug=codecov/ci-repo"
}

function test_jenkins (){
    reset
    export JENKINS_URL="something"
    export GIT_BRANCH="develop"
    export GIT_COMMIT="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    export BUILD_NUMBER="15.1"
    export BUILD_URL="http://endpoint"
    export WORKSPACE="."
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=jenkins&branch=develop&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f&build=15.1&pr=&build_url=http%3A%2F%2Fendpoint"
}

function test_jenkins_vars (){
    reset
    export JENKINS_URL="something"
    export ghprbSourceBranch="develop"
    export ghprbActualCommit="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    export BUILD_NUMBER="15.1"
    export BUILD_URL="http://endpoint"
    export WORKSPACE="."
    export ghprbPullId="5"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=jenkins&branch=develop&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f&build=15.1&pr=5&build_url=http%3A%2F%2Fendpoint"
}

function test_codeship (){
    reset
    export CI="true"
    export CI_NAME="codeship"
    export CI_BRANCH="develop"
    export CI_BUILD_NUMBER="12.1"
    export CI_BUILD_URL="http://endpoint"
    export CI_COMMIT_ID="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=codeship&branch=develop&build=12.1&build_url=http%3A%2F%2Fendpoint&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f"
}

function test_circleci (){
    reset
    export CI="true"
    export CIRCLECI="true"
    export CIRCLE_BRANCH="develop"
    export CIRCLE_BUILD_NUM="9.1"
    export CIRCLE_PROJECT_USERNAME="myuser"
    export CIRCLE_PROJECT_REPONAME="myrepo"
    export CIRCLE_SHA1="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=circleci&branch=develop&build=9.1&slug=myuser/myrepo&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f"
}

function test_semaphore (){
    reset
    export CI="true"
    export SEMAPHORE="true"
    export SEMAPHORE_REPO_SLUG="myowner/myrepo"
    export BRANCH_NAME="develop"
    export SEMAPHORE_BUILD_NUMBER="8.2"
    export REVISION="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=semaphore&branch=develop&build=8.2&slug=myowner/myrepo&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f"
}

function test_drone (){
    reset
    export CI="true"
    export DRONE="true"
    export DRONE_BRANCH="develop"
    export DRONE_BUILD_NUMBER="7.5"
    export DRONE_BUILD_URL="http://drone"
    export DRONE_COMMIT="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=drone.io&branch=develop&build=7.5&build_url=http%3A%2F%2Fdrone&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f"
}

function test_appveyor (){
    reset
    export CI="True"
    export APPVEYOR="True"
    export APPVEYOR_REPO_NAME="myowner/myrepo"
    export APPVEYOR_REPO_BRANCH="develop"
    export APPVEYOR_BUILD_VERSION="1.2.3"
    export APPVEYOR_PULL_REQUEST_NUMBER="1"
    export APPVEYOR_ACCOUNT_NAME="a"
    export APPVEYOR_PROJECT_SLUG="b"
    export APPVEYOR_JOB_ID="9r2qufuu8"
    export APPVEYOR_REPO_COMMIT="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=appveyor&branch=develop&build=9r2qufuu8&pr=1&job=a/b/1.2.3&slug=myowner/myrepo&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f"
}

function test_wercker (){
    reset
    export CI="True"
    export WERCKER_GIT_BRANCH="develop"
    export WERCKER_MAIN_PIPELINE_STARTED="12311"
    export WERCKER_GIT_OWNER="myowner"
    export WERCKER_GIT_REPOSITORY="myrepo"
    export WERCKER_GIT_COMMIT="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=wercker&branch=develop&build=12311&slug=myowner/myrepo&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f"
}

function test_magnum (){
    reset
    export CI="true"
    export MAGNUM="true"
    export CI_BRANCH="develop"
    export CI_BUILD_NUMBER="12311"
    export CI_COMMIT="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=magnum&branch=develop&build=12311&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f"
}

function test_snap_ci (){
    reset
    export CI="true"
    export SNAP_CI="true"
    export SNAP_BRANCH="develop"
    export SNAP_PIPELINE_COUNTER="12311"
    export SNAP_PULL_REQUEST_NUMBER="1"
    export SNAP_COMMIT="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=snap&branch=develop&build=12311&pr=1&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f"
}

function test_gitlab (){
    reset
    export CI_SERVER_NAME="GitLab CI"
    export CI_BUILD_REF_NAME="develop"
    export CI_BUILD_ID="1.2"
    export CI_BUILD_REPO="https://gitlab.com/myowner/myrepo.git"
    export CI_BUILD_REF="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=gitlab&branch=develop&build=1.2&slug=myowner/myrepo&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f"
}

function test_shippable (){
    reset
    export SHIPPABLE="true"
    export BRANCH="develop"
    export BUILD_NUMBER="1.2"
    export REPO_NAME="myowner/myrepo"
    export BUILD_URL="http://shippable"
    export PULL_REQUEST="2"
    export COMMIT="180c0d097354fc1a451da8a3be5aba255f2ffd9f"
    assertURL "https://codecov.io/upload/v2?package=bash-$VERSION&service=shippable&branch=develop&build=1.2&build_url=http%3A%2F%2Fshippable&pull_request=2&slug=myowner/myrepo&commit=180c0d097354fc1a451da8a3be5aba255f2ffd9f"
}


# Call and Run all Tests
. "shunit2-2.1.6/src/shunit2"
